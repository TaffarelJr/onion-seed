<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OnionSeed</name>
    </assembly>
    <members>
        <member name="T:System.ComparableExtensions">
            <summary>
            Contains extension methods for the <see cref="T:System.IComparable"/> interface, to make it more fluent.
            </summary>
        </member>
        <member name="M:System.ComparableExtensions.IsEqualTo(System.IComparable,System.Object)">
            <summary>
            Returns a value indicating whether <paramref name="source"/> is equal to <paramref name="other"/>.
            </summary>
            <param name="source">The source value.</param>
            <param name="other">The other value being compared to <paramref name="source"/>.</param>
            <returns><b>true</b> if <paramref name="source"/> is equal to <paramref name="other"/>; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="other"/> is not the same type as <paramref name="source"/>.</exception>
        </member>
        <member name="M:System.ComparableExtensions.IsNotEqualTo(System.IComparable,System.Object)">
            <summary>
            Returns a value indicating whether <paramref name="source"/> is not equal to <paramref name="other"/>.
            </summary>
            <param name="source">The source value.</param>
            <param name="other">The other value being compared to <paramref name="source"/>.</param>
            <returns><b>true</b> if <paramref name="source"/> is not equal to <paramref name="other"/>; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="other"/> is not the same type as <paramref name="source"/>.</exception>
        </member>
        <member name="M:System.ComparableExtensions.IsLessThan(System.IComparable,System.Object)">
            <summary>
            Returns a value indicating whether <paramref name="source"/> is less than <paramref name="other"/>.
            </summary>
            <param name="source">The source value.</param>
            <param name="other">The other value being compared to <paramref name="source"/>.</param>
            <returns><b>true</b> if <paramref name="source"/> is less than <paramref name="other"/>; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="other"/> is not the same type as <paramref name="source"/>.</exception>
        </member>
        <member name="M:System.ComparableExtensions.IsLessThanOrEqualTo(System.IComparable,System.Object)">
            <summary>
            Returns a value indicating whether <paramref name="source"/> is less than or equal to <paramref name="other"/>.
            </summary>
            <param name="source">The source value.</param>
            <param name="other">The other value being compared to <paramref name="source"/>.</param>
            <returns><b>true</b> if <paramref name="source"/> is less than or equal to <paramref name="other"/>; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="other"/> is not the same type as <paramref name="source"/>.</exception>
        </member>
        <member name="M:System.ComparableExtensions.IsGreaterThan(System.IComparable,System.Object)">
            <summary>
            Returns a value indicating whether <paramref name="source"/> is greater than <paramref name="other"/>.
            </summary>
            <param name="source">The source value.</param>
            <param name="other">The other value being compared to <paramref name="source"/>.</param>
            <returns><b>true</b> if <paramref name="source"/> is greater than <paramref name="other"/>; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="other"/> is not the same type as <paramref name="source"/>.</exception>
        </member>
        <member name="M:System.ComparableExtensions.IsGreaterThanOrEqualTo(System.IComparable,System.Object)">
            <summary>
            Returns a value indicating whether <paramref name="source"/> is greater than or equal to <paramref name="other"/>.
            </summary>
            <param name="source">The source value.</param>
            <param name="other">The other value being compared to <paramref name="source"/>.</param>
            <returns><b>true</b> if <paramref name="source"/> is greater than or equal to <paramref name="other"/>; otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="other"/> is not the same type as <paramref name="source"/>.</exception>
        </member>
        <member name="M:System.ComparableExtensions.IsBetween(System.IComparable,System.Object,System.Object)">
            <summary>
            Returns a value indicating whether <paramref name="source"/> is between <paramref name="min"/> and <paramref name="max"/> (inclusive).
            </summary>
            <param name="source">The source value.</param>
            <param name="min">The minimum value being compared to <paramref name="source"/>.</param>
            <param name="max">The maximum value being compared to <paramref name="source"/>.</param>
            <returns><b>true</b> if <paramref name="source"/> is between <paramref name="min"/> and <paramref name="max"/> (inclusive); otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="min"/> is not the same type as <paramref name="source"/>.
            -or- <paramref name="max"/> is not the same type as <paramref name="source"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="min"/> is greater than <paramref name="max"/>.</exception>
        </member>
        <member name="M:System.ComparableExtensions.IsBetween(System.IComparable,System.IComparable,System.Object)">
            <summary>
            Returns a value indicating whether <paramref name="source"/> is between <paramref name="min"/> and <paramref name="max"/> (inclusive).
            </summary>
            <param name="source">The source value.</param>
            <param name="min">The minimum value being compared to <paramref name="source"/>.</param>
            <param name="max">The maximum value being compared to <paramref name="source"/>.</param>
            <returns><b>true</b> if <paramref name="source"/> is between <paramref name="min"/> and <paramref name="max"/> (inclusive); otherwise, <b>false</b>.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="min"/> is not the same type as <paramref name="source"/>.
            -or- <paramref name="max"/> is not the same type as <paramref name="source"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="min"/> is greater than <paramref name="max"/>.</exception>
        </member>
        <member name="T:System.ComparableTExtensions">
            <summary>
            Contains extension methods for the <see cref="T:System.IComparable`1"/> interface, to make it more fluent.
            </summary>
        </member>
        <member name="M:System.ComparableTExtensions.IsEqualTo``1(System.IComparable{``0},``0)">
            <summary>
            Returns a value indicating whether <paramref name="source"/> is equal to <paramref name="other"/>.
            </summary>
            <typeparam name="T">The type of the objects being compared.</typeparam>
            <param name="source">The source value.</param>
            <param name="other">The other value being compared to <paramref name="source"/>.</param>
            <returns><b>true</b> if <paramref name="source"/> is equal to <paramref name="other"/>; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:System.ComparableTExtensions.IsNotEqualTo``1(System.IComparable{``0},``0)">
            <summary>
            Returns a value indicating whether <paramref name="source"/> is not equal to <paramref name="other"/>.
            </summary>
            <typeparam name="T">The type of the objects being compared.</typeparam>
            <param name="source">The source value.</param>
            <param name="other">The other value being compared to <paramref name="source"/>.</param>
            <returns><b>true</b> if <paramref name="source"/> is not equal to <paramref name="other"/>; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:System.ComparableTExtensions.IsLessThan``1(System.IComparable{``0},``0)">
            <summary>
            Returns a value indicating whether <paramref name="source"/> is less than <paramref name="other"/>.
            </summary>
            <typeparam name="T">The type of the objects being compared.</typeparam>
            <param name="source">The source value.</param>
            <param name="other">The other value being compared to <paramref name="source"/>.</param>
            <returns><b>true</b> if <paramref name="source"/> is less than <paramref name="other"/>; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:System.ComparableTExtensions.IsLessThanOrEqualTo``1(System.IComparable{``0},``0)">
            <summary>
            Returns a value indicating whether <paramref name="source"/> is less than or equal to <paramref name="other"/>.
            </summary>
            <typeparam name="T">The type of the objects being compared.</typeparam>
            <param name="source">The source value.</param>
            <param name="other">The other value being compared to <paramref name="source"/>.</param>
            <returns><b>true</b> if <paramref name="source"/> is less than or equal to <paramref name="other"/>; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:System.ComparableTExtensions.IsGreaterThan``1(System.IComparable{``0},``0)">
            <summary>
            Returns a value indicating whether <paramref name="source"/> is greater than <paramref name="other"/>.
            </summary>
            <typeparam name="T">The type of the objects being compared.</typeparam>
            <param name="source">The source value.</param>
            <param name="other">The other value being compared to <paramref name="source"/>.</param>
            <returns><b>true</b> if <paramref name="source"/> is greater than <paramref name="other"/>; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:System.ComparableTExtensions.IsGreaterThanOrEqualTo``1(System.IComparable{``0},``0)">
            <summary>
            Returns a value indicating whether <paramref name="source"/> is greater than or equal to <paramref name="other"/>.
            </summary>
            <typeparam name="T">The type of the objects being compared.</typeparam>
            <param name="source">The source value.</param>
            <param name="other">The other value being compared to <paramref name="source"/>.</param>
            <returns><b>true</b> if <paramref name="source"/> is greater than or equal to <paramref name="other"/>; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:System.ComparableTExtensions.IsBetween``1(System.IComparable{``0},``0,``0)">
            <summary>
            Returns a value indicating whether <paramref name="source"/> is between <paramref name="min"/> and <paramref name="max"/> (inclusive).
            </summary>
            <typeparam name="T">The type of the objects being compared.</typeparam>
            <param name="source">The source value.</param>
            <param name="min">The minimum value being compared to <paramref name="source"/>.</param>
            <param name="max">The maximum value being compared to <paramref name="source"/>.</param>
            <returns><b>true</b> if <paramref name="source"/> is between <paramref name="min"/> and <paramref name="max"/> (inclusive); otherwise, <b>false</b>.</returns>
            -or- <paramref name="max"/> is not the same type as <paramref name="source"/>.
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="min"/> is greater than <paramref name="max"/>.</exception>
        </member>
        <member name="M:System.ComparableTExtensions.ConstrainToMin``1(``0,``0)">
            <summary>
            Returns the larger of either <paramref name="source"/> or <paramref name="min"/>.
            </summary>
            <typeparam name="T">The type of the objects being compared.</typeparam>
            <param name="source">The source value.</param>
            <param name="min">The minimum value being compared to <paramref name="source"/>.</param>
            <returns><paramref name="min"/>, if <paramref name="source"/> is less than <paramref name="min"/>; otherwise, <paramref name="source"/>.</returns>
        </member>
        <member name="M:System.ComparableTExtensions.ConstrainToMax``1(``0,``0)">
            <summary>
            Returns the smaller of either <paramref name="source"/> or <paramref name="max"/>.
            </summary>
            <typeparam name="T">The type of the objects being compared.</typeparam>
            <param name="source">The source value.</param>
            <param name="max">The maximum value being compared to <paramref name="source"/>.</param>
            <returns><paramref name="max"/>, if <paramref name="source"/> is greater than <paramref name="max"/>; otherwise, <paramref name="source"/>.</returns>
        </member>
        <member name="M:System.ComparableTExtensions.ConstrainTo``1(``0,``0,``0)">
            <summary>
            Gets the larger of either <paramref name="source"/> or <paramref name="min"/>,
            then returns the smaller of either that number or <paramref name="max"/>.
            </summary>
            <typeparam name="T">The type of the objects being compared.</typeparam>
            <param name="source">The source value.</param>
            <param name="min">The minimum value being compared to <paramref name="source"/>.</param>
            <param name="max">The maximum value being compared to <paramref name="source"/>.</param>
            <returns><paramref name="min"/> if <paramref name="source"/> is less than <paramref name="min"/>,
            or <paramref name="max"/> if <paramref name="source"/> is greater than <paramref name="max"/>; otherwise, <paramref name="source"/>.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="min"/> is greater than <paramref name="max"/>.</exception>
        </member>
        <member name="T:OnionSeed.Utilities.FluentDate.FluentMonthExtensions">
            <summary>
            Contains extension methods representing each month of the year, enabling instances of <see cref="T:System.DateTime"/> to be created with a fluent syntax.
            </summary>
        </member>
        <member name="M:OnionSeed.Utilities.FluentDate.FluentMonthExtensions.January(System.Int32,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime"/> instance set to the specified day of January of the specified year.
            </summary>
            <param name="day">The day (1 through 31).</param>
            <param name="year">The year (1 through 9999).</param>
            <returns>A new <see cref="T:System.DateTime"/> instance set to the specified day of January of the specified year.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="day"/> is less than 1 or greater than 31.
            -or- <paramref name="year"/> is less than 1 or greater than 9999.</exception>
            <remarks>The <see cref="P:System.DateTime.Kind"/> of the return value is <see cref="F:System.DateTimeKind.Unspecified"/>.</remarks>
        </member>
        <member name="M:OnionSeed.Utilities.FluentDate.FluentMonthExtensions.February(System.Int32,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime"/> instance set to the specified day of February of the specified year.
            </summary>
            <param name="day">The day (1 through 28 - or 29, depending on the year).</param>
            <param name="year">The year (1 through 9999).</param>
            <returns>A new <see cref="T:System.DateTime"/> instance set to the specified day of February of the specified year.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="day"/> is less than 1 or greater than 28 (or 29, depending on the year).
            -or- <paramref name="year"/> is less than 1 or greater than 9999.</exception>
            <remarks>The <see cref="P:System.DateTime.Kind"/> of the return value is <see cref="F:System.DateTimeKind.Unspecified"/>.</remarks>
        </member>
        <member name="M:OnionSeed.Utilities.FluentDate.FluentMonthExtensions.March(System.Int32,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime"/> instance set to the specified day of March of the specified year.
            </summary>
            <param name="day">The day (1 through 31).</param>
            <param name="year">The year (1 through 9999).</param>
            <returns>A new <see cref="T:System.DateTime"/> instance set to the specified day of March of the specified year.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="day"/> is less than 1 or greater than 31.
            -or- <paramref name="year"/> is less than 1 or greater than 9999.</exception>
            <remarks>The <see cref="P:System.DateTime.Kind"/> of the return value is <see cref="F:System.DateTimeKind.Unspecified"/>.</remarks>
        </member>
        <member name="M:OnionSeed.Utilities.FluentDate.FluentMonthExtensions.April(System.Int32,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime"/> instance set to the specified day of April of the specified year.
            </summary>
            <param name="day">The day (1 through 30).</param>
            <param name="year">The year (1 through 9999).</param>
            <returns>A new <see cref="T:System.DateTime"/> instance set to the specified day of April of the specified year.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="day"/> is less than 1 or greater than 30.
            -or- <paramref name="year"/> is less than 1 or greater than 9999.</exception>
            <remarks>The <see cref="P:System.DateTime.Kind"/> of the return value is <see cref="F:System.DateTimeKind.Unspecified"/>.</remarks>
        </member>
        <member name="M:OnionSeed.Utilities.FluentDate.FluentMonthExtensions.May(System.Int32,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime"/> instance set to the specified day of May of the specified year.
            </summary>
            <param name="day">The day (1 through 31).</param>
            <param name="year">The year (1 through 9999).</param>
            <returns>A new <see cref="T:System.DateTime"/> instance set to the specified day of May of the specified year.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="day"/> is less than 1 or greater than 31.
            -or- <paramref name="year"/> is less than 1 or greater than 9999.</exception>
            <remarks>The <see cref="P:System.DateTime.Kind"/> of the return value is <see cref="F:System.DateTimeKind.Unspecified"/>.</remarks>
        </member>
        <member name="M:OnionSeed.Utilities.FluentDate.FluentMonthExtensions.June(System.Int32,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime"/> instance set to the specified day of June of the specified year.
            </summary>
            <param name="day">The day (1 through 30).</param>
            <param name="year">The year (1 through 9999).</param>
            <returns>A new <see cref="T:System.DateTime"/> instance set to the specified day of June of the specified year.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="day"/> is less than 1 or greater than 30.
            -or- <paramref name="year"/> is less than 1 or greater than 9999.</exception>
            <remarks>The <see cref="P:System.DateTime.Kind"/> of the return value is <see cref="F:System.DateTimeKind.Unspecified"/>.</remarks>
        </member>
        <member name="M:OnionSeed.Utilities.FluentDate.FluentMonthExtensions.July(System.Int32,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime"/> instance set to the specified day of July of the specified year.
            </summary>
            <param name="day">The day (1 through 31).</param>
            <param name="year">The year (1 through 9999).</param>
            <returns>A new <see cref="T:System.DateTime"/> instance set to the specified day of July of the specified year.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="day"/> is less than 1 or greater than 31.
            -or- <paramref name="year"/> is less than 1 or greater than 9999.</exception>
            <remarks>The <see cref="P:System.DateTime.Kind"/> of the return value is <see cref="F:System.DateTimeKind.Unspecified"/>.</remarks>
        </member>
        <member name="M:OnionSeed.Utilities.FluentDate.FluentMonthExtensions.August(System.Int32,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime"/> instance set to the specified day of August of the specified year.
            </summary>
            <param name="day">The day (1 through 31).</param>
            <param name="year">The year (1 through 9999).</param>
            <returns>A new <see cref="T:System.DateTime"/> instance set to the specified day of August of the specified year.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="day"/> is less than 1 or greater than 31.
            -or- <paramref name="year"/> is less than 1 or greater than 9999.</exception>
            <remarks>The <see cref="P:System.DateTime.Kind"/> of the return value is <see cref="F:System.DateTimeKind.Unspecified"/>.</remarks>
        </member>
        <member name="M:OnionSeed.Utilities.FluentDate.FluentMonthExtensions.September(System.Int32,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime"/> instance set to the specified day of September of the specified year.
            </summary>
            <param name="day">The day (1 through 30).</param>
            <param name="year">The year (1 through 9999).</param>
            <returns>A new <see cref="T:System.DateTime"/> instance set to the specified day of September of the specified year.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="day"/> is less than 1 or greater than 30.
            -or- <paramref name="year"/> is less than 1 or greater than 9999.</exception>
            <remarks>The <see cref="P:System.DateTime.Kind"/> of the return value is <see cref="F:System.DateTimeKind.Unspecified"/>.</remarks>
        </member>
        <member name="M:OnionSeed.Utilities.FluentDate.FluentMonthExtensions.October(System.Int32,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime"/> instance set to the specified day of October of the specified year.
            </summary>
            <param name="day">The day (1 through 31).</param>
            <param name="year">The year (1 through 9999).</param>
            <returns>A new <see cref="T:System.DateTime"/> instance set to the specified day of October of the specified year.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="day"/> is less than 1 or greater than 31.
            -or- <paramref name="year"/> is less than 1 or greater than 9999.</exception>
            <remarks>The <see cref="P:System.DateTime.Kind"/> of the return value is <see cref="F:System.DateTimeKind.Unspecified"/>.</remarks>
        </member>
        <member name="M:OnionSeed.Utilities.FluentDate.FluentMonthExtensions.November(System.Int32,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime"/> instance set to the specified day of November of the specified year.
            </summary>
            <param name="day">The day (1 through 30).</param>
            <param name="year">The year (1 through 9999).</param>
            <returns>A new <see cref="T:System.DateTime"/> instance set to the specified day of November of the specified year.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="day"/> is less than 1 or greater than 30.
            -or- <paramref name="year"/> is less than 1 or greater than 9999.</exception>
            <remarks>The <see cref="P:System.DateTime.Kind"/> of the return value is <see cref="F:System.DateTimeKind.Unspecified"/>.</remarks>
        </member>
        <member name="M:OnionSeed.Utilities.FluentDate.FluentMonthExtensions.December(System.Int32,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime"/> instance set to the specified day of December of the specified year.
            </summary>
            <param name="day">The day (1 through 31).</param>
            <param name="year">The year (1 through 9999).</param>
            <returns>A new <see cref="T:System.DateTime"/> instance set to the specified day of December of the specified year.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="day"/> is less than 1 or greater than 31.
            -or- <paramref name="year"/> is less than 1 or greater than 9999.</exception>
            <remarks>The <see cref="P:System.DateTime.Kind"/> of the return value is <see cref="F:System.DateTimeKind.Unspecified"/>.</remarks>
        </member>
        <member name="T:OnionSeed.Utilities.FluentDate.FluentTimeExtensions">
            <summary>
            Contains extension methods representing the time of day, enabling the time portion of a <see cref="T:System.DateTime"/> to be set with a fluent syntax.
            </summary>
        </member>
        <member name="M:OnionSeed.Utilities.FluentDate.FluentTimeExtensions.At(System.DateTime,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime"/> instance using the date portion of the given <see cref="T:System.DateTime"/>, but with the time portion configured as specified.
            </summary>
            <param name="source">The original <see cref="T:System.DateTime"/> value, whose time portion is to be set.</param>
            <param name="hour">The desired hour (0 through 23).</param>
            <returns>A new <see cref="T:System.DateTime"/> instance using the date portion of the given <see cref="T:System.DateTime"/>, but with the time portion configured as specified.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="hour"/> is less than 0 or greater than 23.</exception>
            <remarks>The <see cref="P:System.DateTime.Kind"/> of the return value is the same as the original <see cref="T:System.DateTime"/>.
            <para>This method leaves the extra ticks value set to zero.</para></remarks>
        </member>
        <member name="M:OnionSeed.Utilities.FluentDate.FluentTimeExtensions.At(System.DateTime,System.Int32,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime"/> instance using the date portion of the given <see cref="T:System.DateTime"/>, but with the time portion configured as specified.
            </summary>
            <param name="source">The original <see cref="T:System.DateTime"/> value, whose time portion is to be set.</param>
            <param name="hour">The desired hour (0 through 23).</param>
            <param name="minutes">The desired number of minutes (0 through 59).</param>
            <returns>A new <see cref="T:System.DateTime"/> instance using the date portion of the given <see cref="T:System.DateTime"/>, but with the time portion configured as specified.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="hour"/> is less than 0 or greater than 23.
            -or- <paramref name="minutes"/> is less than 0 or greater than 59.</exception>
            <remarks>The <see cref="P:System.DateTime.Kind"/> of the return value is the same as the original <see cref="T:System.DateTime"/>.
            <para>This method leaves the extra ticks value set to zero.</para></remarks>
        </member>
        <member name="M:OnionSeed.Utilities.FluentDate.FluentTimeExtensions.At(System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime"/> instance using the date portion of the given <see cref="T:System.DateTime"/>, but with the time portion configured as specified.
            </summary>
            <param name="source">The original <see cref="T:System.DateTime"/> value, whose time portion is to be set.</param>
            <param name="hour">The desired hour (0 through 23).</param>
            <param name="minutes">The desired number of minutes (0 through 59).</param>
            <param name="seconds">The desired number of seconds (0 through 59).</param>
            <returns>A new <see cref="T:System.DateTime"/> instance using the date portion of the given <see cref="T:System.DateTime"/>, but with the time portion configured as specified.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="hour"/> is less than 0 or greater than 23.
            -or- <paramref name="minutes"/> is less than 0 or greater than 59.
            -or- <paramref name="seconds"/> is less than 0 or greater than 59.</exception>
            <remarks>The <see cref="P:System.DateTime.Kind"/> of the return value is the same as the original <see cref="T:System.DateTime"/>.
            <para>This method leaves the extra ticks value set to zero.</para></remarks>
        </member>
        <member name="M:OnionSeed.Utilities.FluentDate.FluentTimeExtensions.At(System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns a new <see cref="T:System.DateTime"/> instance using the date portion of the given <see cref="T:System.DateTime"/>, but with the time portion configured as specified.
            </summary>
            <param name="source">The original <see cref="T:System.DateTime"/> value, whose time portion is to be set.</param>
            <param name="hour">The desired hour (0 through 23).</param>
            <param name="minutes">The desired number of minutes (0 through 59).</param>
            <param name="seconds">The desired number of seconds (0 through 59).</param>
            <param name="milliseconds">The desired number of milliseconds (0 through 999).</param>
            <returns>A new <see cref="T:System.DateTime"/> instance using the date portion of the given <see cref="T:System.DateTime"/>, but with the time portion configured as specified.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="hour"/> is less than 0 or greater than 23.
            -or- <paramref name="minutes"/> is less than 0 or greater than 59.
            -or- <paramref name="seconds"/> is less than 0 or greater than 59.
            -or- <paramref name="milliseconds"/> is less than 0 or greater than 999.</exception>
            <remarks>The <see cref="P:System.DateTime.Kind"/> of the return value is the same as the original <see cref="T:System.DateTime"/>.
            <para>This method leaves the extra ticks value set to zero.</para></remarks>
        </member>
        <member name="M:OnionSeed.Utilities.FluentDate.FluentTimeExtensions.UniversalTime(System.DateTime)">
            <summary>
            Returns a new <see cref="T:System.DateTime"/> instance using the date and time portions of the given <see cref="T:System.DateTime"/>, but with the kind set to UTC time.
            </summary>
            <param name="source">The original <see cref="T:System.DateTime"/> value, whose kind is to be set.</param>
            <returns>A new <see cref="T:System.DateTime"/> instance using the date and time portions of the given <see cref="T:System.DateTime"/>, but with the kind set to UTC time.</returns>
            <remarks>No conversion is performed; the <see cref="T:System.DateTime"/> retains it's current values. Only the kind changes.</remarks>
        </member>
        <member name="M:OnionSeed.Utilities.FluentDate.FluentTimeExtensions.LocalTime(System.DateTime)">
            <summary>
            Returns a new <see cref="T:System.DateTime"/> instance using the date and time portions of the given <see cref="T:System.DateTime"/>, but with the kind set to local time.
            </summary>
            <param name="source">The original <see cref="T:System.DateTime"/> value, whose kind is to be set.</param>
            <returns>A new <see cref="T:System.DateTime"/> instance using the date and time portions of the given <see cref="T:System.DateTime"/>, but with the kind set to local time.</returns>
            <remarks>No conversion is performed; the <see cref="T:System.DateTime"/> retains it's current values. Only the kind changes.</remarks>
        </member>
    </members>
</doc>
